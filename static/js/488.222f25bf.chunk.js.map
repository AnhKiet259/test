{"version":3,"file":"static/js/488.222f25bf.chunk.js","mappings":"oLAMA,MAAMA,EAAgB,CAClBC,MAAO,yCACPC,KAAM,SACNC,SAAU,CAAC,YAAa,WAAY,QAAS,WAAY,mBACzDC,WAAY,CACRC,UAAW,CAAEH,KAAM,SAAUD,MAAO,kCACpCK,SAAU,CAAEJ,KAAM,SAAUD,MAAO,mCACnCM,MAAO,CAAEL,KAAM,SAAUD,MAAO,kCAChCO,SAAU,CAAEN,KAAM,SAAUD,MAAO,gBAASQ,OAAQ,YACpDC,gBAAiB,CAAER,KAAM,SAAUD,MAAO,gBAASQ,OAAQ,YAC3DE,KAAM,CAAET,KAAMU,KAAMC,QAASD,KAAKE,OAIpCC,EAAgBC,IACVA,GAASA,EAAMC,OAAOC,OAAS,EAGrCC,EAAgBZ,GACX,gDAAgDa,KAAKb,GAGjD,SAASc,IACpB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAASxB,IACpCyB,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,GAgCtCG,EAAgBC,IAClB,MAAM,MAAEZ,EAAK,KAAEa,GAASD,EAAME,OAC9BP,EAAa,IACND,EACH,CAACO,GAAOb,EACRL,MAAM,IAAIC,MAAOmB,eACnB,EAiCN,OAFAC,QAAQC,IAAIR,IAGRS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACpBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuB,eAASC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAQC,IAAI,YAG1BH,EAAAA,EAAAA,MAAA,QAAMF,UAAU,8BAA8BM,SAtCrCC,UACjBd,EAAMe,iBACN,MACMC,GADc,IAAIhC,MACUmB,cAClC,GA1CiBc,MACjB,MAAMC,EAAQ,CAAC,EA0Bf,OAxBI/B,EAAaO,EAAUjB,aACvByC,EAAiB,UAAI,iCAErB/B,EAAaO,EAAUhB,YACvBwC,EAAgB,SAAI,gCAEpB/B,EAAaO,EAAUf,OACvBuC,EAAa,MAAI,2BAEZ3B,EAAaG,EAAUf,SACxBuC,EAAa,MAAI,2BAGrB/B,EAAaO,EAAUd,YACvBsC,EAAgB,SAAI,+BAEpB/B,EAAaO,EAAUZ,iBACvBoC,EAAuB,gBAAI,sCACpBxB,EAAUZ,kBAAoBY,EAAUd,WAC/CsC,EAAuB,gBAAI,qCAG/BpB,EAAaoB,GAEwB,IAA9BC,OAAOC,KAAKF,GAAO5B,MAAY,EAelC2B,GACA,IAEI,MAAMI,EAAW,CACb5C,UAAWiB,EAAUjB,UACrBC,SAAUgB,EAAUhB,SACpBC,MAAOe,EAAUf,MACjBC,SAAUc,EAAUd,SACpBE,gBAAiBY,EAAUZ,gBAC3BC,KAAMiC,GAEVZ,QAAQC,IAAI,6DAAiCgB,GAE7C,MAAMC,QAAiBC,EAAAA,EAAMC,KAAK,uFAAwFH,GAC1HjB,QAAQC,IAAI,0DAA8BiB,EAASG,KAEvD,CAAE,MAAOP,GACLd,QAAQc,MAAM,2CAAwBA,EAE1C,MAEAd,QAAQC,IAAI,eAChB,EAY6EG,SAAA,EACjEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,cAItCC,EAAAA,EAAAA,MAAA,OACIF,UAAU,+BAA8BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIoB,GAAG,aACHnB,UAAU,WACVjC,KAAK,OACL2B,KAAK,YACL0B,YAAY,YACZvC,MAAOM,EAAUjB,UACjBmD,SAAU7B,IAEbF,EAAUpB,YACP6B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEX,EAAUpB,aAE/C6B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,KAAGuB,MAAM,wBAIjBpB,EAAAA,EAAAA,MAAA,OACIF,UAAU,+BAA8BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIoB,GAAG,YACHnB,UAAU,WACVjC,KAAK,OACL2B,KAAK,WACL0B,YAAY,WACZvC,MAAOM,EAAUhB,SACjBkD,SAAU7B,IAEbF,EAAUnB,WACP4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEX,EAAUnB,YAE/C4B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,KAAGuB,MAAM,wBAIjBpB,EAAAA,EAAAA,MAAA,OACIF,UAAU,+BAA8BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIoB,GAAG,QACHnB,UAAU,WACVjC,KAAK,OACL2B,KAAK,QACL0B,YAAY,QACZvC,MAAOM,EAAUf,MACjBiD,SAAU7B,IAEbF,EAAUlB,QACP2B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEX,EAAUlB,SAE/C2B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,KAAGuB,MAAM,mBAAmB,cAAY,eAIhDpB,EAAAA,EAAAA,MAAA,OACIF,UAAU,+BAA8BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIoB,GAAG,WACHnB,UAAU,WACVjC,KAAK,WACL2B,KAAK,WACL0B,YAAY,WACZvC,MAAOM,EAAUd,SACjBgD,SAAU7B,IAEbF,EAAUiC,WACPxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEX,EAAUiC,YAE/CxB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,KAAGuB,MAAM,2BAIjBpB,EAAAA,EAAAA,MAAA,OACIF,UAAU,+BAA8BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,SACIoB,GAAG,mBACHnB,UAAU,WACVjC,KAAK,WACL2B,KAAK,kBACL0B,YAAY,mBACZvC,MAAOM,EAAUZ,gBACjB8C,SAAU7B,IAEbF,EAAUf,kBACPwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEX,EAAUf,mBAE/CwB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,KAAGuB,MAAM,2BAIjBvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UACxCF,EAAAA,EAAAA,KAAA,UAAQhC,KAAK,SAASiC,UAAU,oBAAmBC,SAAC,eAGxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAsBwB,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAASzB,UACpFC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,OAAO2B,KAAK,IAAG1B,SAAA,CAAC,uBAEzBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA+B,cAAY,qBAOpF,C","sources":["Components/RegisterAccount.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./RegisterAccount.css\";\r\nimport logore from './picgo.png';\r\nimport axios from 'axios';\r\n\r\nconst initFormValue = {\r\n    title: 'TÀI KHOẢN ĐĂNG KÝ',\r\n    type: 'object',\r\n    required: ['firstName', 'lastName', 'email', 'password', 'confirmPassword'],\r\n    properties: {\r\n        firstName: { type: 'string', title: 'TÊN NGƯỜI DÙNG' },\r\n        lastName: { type: 'string', title: 'HỌ NGƯỜI DÙNG' },\r\n        email: { type: 'string', title: 'Email NGƯỜI DÙNG ' },\r\n        password: { type: 'string', title: 'MÃ SỐ', format: 'password' },\r\n        confirmPassword: { type: 'string', title: 'MÃ SỐ', format: 'password' },\r\n        date: { type: Date, default: Date.now },\r\n    },\r\n};\r\n\r\nconst isEmptyValue = (value) => {\r\n    return !value || value.trim().length < 1;\r\n};\r\n\r\nconst isEmailValid = (email) => {\r\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\r\n};\r\n\r\nexport default function RegisterPage() {\r\n    const [formValue, setFormValue] = useState(initFormValue);\r\n    const [formError, setFormError] = useState({});\r\n\r\n    const validateForm = () => {\r\n        const error = {};\r\n\r\n        if (isEmptyValue(formValue.firstName)) {\r\n            error[\"firstName\"] = \"Error: First Name is required\";\r\n        }\r\n        if (isEmptyValue(formValue.lastName)) {\r\n            error[\"lastName\"] = \"Error: Last Name is required\";\r\n        }\r\n        if (isEmptyValue(formValue.email)) {\r\n            error[\"email\"] = \"Error: Email is required\";\r\n        } else {\r\n            if (!isEmailValid(formValue.email)) {\r\n                error[\"email\"] = \"Error: Email is invalid\";\r\n            }\r\n        }\r\n        if (isEmptyValue(formValue.password)) {\r\n            error[\"passWord\"] = \"Error: Password is required\";\r\n        }\r\n        if (isEmptyValue(formValue.confirmPassword)) {\r\n            error[\"confirmPassword\"] = \"Error: Confirm Password is required\";\r\n        } else if (formValue.confirmPassword !== formValue.password) {\r\n            error[\"confirmPassword\"] = \"Error: Confirm Password not match\";\r\n        }\r\n\r\n        setFormError(error);\r\n\r\n        return Object.keys(error).length === 0;\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value,\r\n            date: new Date().toISOString()\r\n        });\r\n    };\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const currentDate = new Date();\r\n        const formattedDate = currentDate.toISOString();\r\n        if (validateForm()) {\r\n            try {\r\n                // Tạo một object mới chứa dữ liệu người dùng từ formValue\r\n                const userData = {\r\n                    firstName: formValue.firstName,\r\n                    lastName: formValue.lastName,\r\n                    email: formValue.email,\r\n                    password: formValue.password,\r\n                    confirmPassword: formValue.confirmPassword,\r\n                    date: formattedDate,\r\n                };\r\n                console.log('Đã gửi dữ liệu thành công:XXX', userData);\r\n                // Gửi dữ liệu người dùng mới này\r\n                const response = await axios.post('https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/Log_in', userData);\r\n                console.log('Đã gửi dữ liệu thành công:', response.data);\r\n                // Thực hiện các xử lý tiếp theo, ví dụ: chuyển hướng, hiển thị thông báo thành công, vv.\r\n            } catch (error) {\r\n                console.error('Lỗi khi gửi dữ liệu:', error);\r\n                // Xử lý lỗi và hiển thị thông báo lỗi cho người dùng\r\n            }\r\n        } else {\r\n            console.log(\"form invalid\");\r\n        }\r\n    };\r\n\r\n    console.log(formError);\r\n\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-pic js-tilt\" data-tilt>\r\n                    <img src={logore} alt='Logo' />\r\n                </div>\r\n\r\n                <form className=\"login100-form validate-form\" onSubmit={handleSubmit}>\r\n                    <span className=\"login100-form-title\">\r\n                        Register\r\n                    </span>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"first-name\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"FirstName\"\r\n                            value={formValue.firstName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.firstName && (\r\n                            <div className=\"error-feedback\">{formError.firstName}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-label\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"last-name\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"LastName\"\r\n                            value={formValue.lastName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.lastName && (\r\n                            <div className=\"error-feedback\">{formError.lastName}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-label\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"email\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={formValue.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.email && (\r\n                            <div className=\"error-feedback\">{formError.email}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-envelope\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"password\"\r\n                            className=\"input100\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={formValue.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.passWord && (\r\n                            <div className=\"error-feedback\">{formError.passWord}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-lock-alt\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"confirm-password\"\r\n                            className=\"input100\"\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Confirm Password\"\r\n                            value={formValue.confirmPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.confirmPassword && (\r\n                            <div className=\"error-feedback\">{formError.confirmPassword}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-lock-alt\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"container-login100-form-btn\">\r\n                        <button type=\"submit\" className=\"login100-form-btn\">Sign Up</button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center p-t-136\" style={{ textAlign: \"center\", paddingTop: \"20px\" }}>\r\n                        <a className=\"txt2\" href=\"#\">\r\n                            Create your Account\r\n                            <i className=\"fa fa-long-arrow-right m-l-5\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["initFormValue","title","type","required","properties","firstName","lastName","email","password","format","confirmPassword","date","Date","default","now","isEmptyValue","value","trim","length","isEmailValid","test","RegisterPage","formValue","setFormValue","useState","formError","setFormError","handleChange","event","name","target","toISOString","console","log","_jsx","className","children","_jsxs","src","logore","alt","onSubmit","async","preventDefault","formattedDate","validateForm","error","Object","keys","userData","response","axios","post","data","id","placeholder","onChange","class","passWord","style","textAlign","paddingTop","href"],"sourceRoot":""}