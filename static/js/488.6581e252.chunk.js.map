{"version":3,"file":"static/js/488.6581e252.chunk.js","mappings":"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","sources":["Components/RegisterAccount.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./RegisterAccount.css\";\r\nimport logore from './picgo.png';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\n\r\nconst isEmptyValue = (value) => {\r\n    return !value || value.trim().length < 1;\r\n};\r\n\r\nconst isEmailValid = (email) => {\r\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\r\n};\r\n\r\nexport default function RegisterPage({ }) {\r\n\r\n    const [formValue, setFormValue] = useState({});\r\n    const [formError, setFormError] = useState({});\r\n    const [modalVisible1, setModalVisible1] = useState(false);\r\n    const [modalVisible2, setModalVisible2] = useState(false);\r\n    const [modalVisible23, setModalVisible23] = useState(false);\r\n\r\n    const toggleModal1 = () => {\r\n        setModalVisible1(!modalVisible1); // Toggle the modal visibility state\r\n    };\r\n    const toggleModal2 = () => {\r\n        setModalVisible2(!modalVisible2); // Toggle the modal visibility state\r\n    };\r\n    const toggleModal23 = () => {\r\n        setModalVisible23(!modalVisible23); // Toggle the modal visibility state\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const error = {};\r\n\r\n        if (isEmptyValue(formValue.username) || isEmptyValue(formValue.firstname)\r\n            || isEmptyValue(formValue.lastname)\r\n            || isEmptyValue(formValue.email) || isEmptyValue(formValue.phone)\r\n            || isEmptyValue(formValue.password)) {\r\n            toggleModal1();\r\n            error[\"password\"] = \"Error: Please Fill All Information\";\r\n        }\r\n        setFormError(error);\r\n        return Object.keys(error).length === 0;\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value,\r\n            date: new Date().toISOString()\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const currentDate = new Date();\r\n        const formattedDate = currentDate.toISOString();\r\n\r\n        if (validateForm()) {\r\n            try {\r\n\r\n                const userData = {\r\n                    username: formValue.username,\r\n                    firstname: formValue.firstname,\r\n                    lastname: formValue.lastname,\r\n                    birthdate: formValue.birthdate,\r\n                    email: formValue.email,\r\n                    phone: formValue.phone,\r\n                    password: formValue.password,\r\n                    date: formattedDate,\r\n                    role: 0,\r\n                };\r\n                const response = await axios.post('https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/Log_in', userData);\r\n\r\n                if (response.data.body === true) {\r\n                    console.log('Đã gửi dữ liệu thành công:', response.data);\r\n                    // Xóa thông tin trong form sau khi gửi thành công\r\n                    setFormValue({\r\n                        username: '',\r\n                        firstname: '',\r\n                        lastname: '',\r\n                        birthdate: '',\r\n                        email: '',\r\n                        phone: '',\r\n                        password: '',\r\n                    });\r\n                    toggleModal2();\r\n                    // Thực hiện các xử lý tiếp theo, ví dụ: chuyển hướng, hiển thị thông báo thành công, vv.\r\n                } else {\r\n                    toggleModal23();\r\n                }\r\n            } catch (error) {\r\n                console.error('Lỗi khi gửi dữ liệu:', error);\r\n                // Xử lý lỗi và hiển thị thông báo lỗi\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    console.log(formError);\r\n\r\n    return (\r\n        <div class=\"container43 login-formz\">\r\n            <div class=\"left-column login1001-pic\">\r\n                <img src={logore} alt='Logo' />\r\n            </div>\r\n            <div class=\"right-column\">\r\n                <div class=\"limiter \" >\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h1 style={{ textAlign: 'center', marginBottom: '30px', color: '#A2A0A0' }}>Register</h1>\r\n                        <div class=\"form-groupz\">\r\n                            <input className=\"textz\" id=\"username\" name=\"username\"\r\n                                placeholder=\"Username\" value={formValue.username} onChange={handleChange} />\r\n                        </div>\r\n                        <div class=\"form-groupz\">\r\n                            <div style={{ display: 'flex' }}>\r\n                                <input\r\n                                    className=\"textz\"\r\n                                    id=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    value={formValue.firstname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <input\r\n                                    className=\"textz\"\r\n                                    id=\"lastname\"\r\n                                    name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    style={{ marginLeft: '10px' }}\r\n                                    value={formValue.lastname}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-groupz\">\r\n                            <input className=\"textz\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\" value={formValue.email} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div class=\"form-groupz\">\r\n                            <div style={{ display: 'flex' }}>\r\n                                <DatePicker\r\n                                    className=\"textz\"\r\n                                    id=\"birthdate\"\r\n                                    name=\"birthdate\"\r\n                                    placeholderText=\"Date of Birth\"\r\n                                    selected={formValue.birthdate}\r\n                                    onChange={(date) => {\r\n                                        const formattedDate = date.toISOString();\r\n                                        setFormValue((prevFormValue) => ({\r\n                                            ...prevFormValue,\r\n                                            birthdate: formattedDate,\r\n                                        }));\r\n                                    }}\r\n                                />\r\n                                <input className=\"textz\" id=\"phone\" name=\"phone\"\r\n                                    placeholder=\"Phone\" style={{ marginLeft: '10px' }} value={formValue.phone} onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-groupz\">\r\n                            <input className=\"textz\" type=\"password\" id=\"password\" name=\"password\"\r\n                                placeholder=\"Password\" value={formValue.password} onChange={handleChange} />\r\n                        </div>\r\n\r\n                        {/* {formError.password && (\r\n                            <div className=\"error-feedback\">{formError.password}</div>\r\n                        )} */}\r\n                        {modalVisible1 && (\r\n                            <div className=\"modal\">\r\n                                <div className=\"modal-content\">\r\n                                    <i class=\"uil uil-annoyed modalicon\" style={{ width: \"200px\" }}></i>\r\n                                    <h2>Lưu Ý</h2>\r\n                                    <p>Vui lòng điền đầy đủ thông tin cá nhân</p>\r\n                                    <button className=\"modal-close\" onClick={toggleModal1}>\r\n                                        Đóng\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {modalVisible2 && (\r\n                            <div className=\"modal\">\r\n                                <div className=\"modal-content\">\r\n                                    <i class=\"uil uil-check-circle modalicon\" style={{ width: \"200px\", color: 'green' }}></i>\r\n                                    <h2>Thành Công</h2>\r\n                                    <p>Bạn đã đăng kí tài khoản thành công !</p>\r\n                                    <button className=\"modal-close\" onClick={toggleModal2}>\r\n                                        Đóng\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {modalVisible23 && (\r\n                            <div className=\"modal\">\r\n                                <div className=\"modal-content\">\r\n                                    <i class=\"uil uil-exclamation-circle modalicon\" style={{ width: \"200px\", color: 'red' }}></i>\r\n                                    <h2>Thất Bại</h2>\r\n                                    <p>Tài khoản đã tồn tại trong hệ thống !</p>\r\n                                    <button className=\"modal-close\" onClick={toggleModal23}>\r\n                                        Đóng\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                        <div style={{ textAlign: 'center', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            <button style={{ width: '60%' }} className='buttonz' type=\"submit\">Đăng Kí</button>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"10px\" }}>\r\n                            <a style={{\r\n                                color: 'white',\r\n                                fontSize: '10px',\r\n                                textDecoration: 'underline',\r\n                                transition: '0.3s',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                                onMouseEnter={(e) => e.target.style.color = '#43d2e8'}\r\n                                onMouseLeave={(e) => e.target.style.color = 'white'}\r\n                            >\r\n                                Already Have Account ?\r\n                            </a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    );\r\n}"],"names":["isEmptyValue","value","trim","length","RegisterPage","_ref","formValue","setFormValue","useState","formError","setFormError","modalVisible1","setModalVisible1","modalVisible2","setModalVisible2","modalVisible23","setModalVisible23","toggleModal1","toggleModal2","toggleModal23","handleChange","event","name","target","date","Date","toISOString","console","log","_jsxs","class","children","_jsx","src","logore","alt","onSubmit","async","preventDefault","formattedDate","validateForm","error","username","firstname","lastname","email","phone","password","Object","keys","userData","birthdate","role","response","axios","post","data","body","style","textAlign","marginBottom","color","className","id","placeholder","onChange","display","marginLeft","DatePicker","placeholderText","selected","prevFormValue","type","width","onClick","justifyContent","alignItems","paddingTop","fontSize","textDecoration","transition","cursor","onMouseEnter","e","onMouseLeave"],"sourceRoot":""}