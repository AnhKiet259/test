{"version":3,"file":"static/js/171.e6860c00.chunk.js","mappings":"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","sources":["Components/Speed.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Speed.css\";\r\n\r\nconst initFormValue = {\r\n    Speed: { type: 'int' },\r\n    date: { type: Date, default: Date.now },\r\n};\r\n\r\nconst isEmptyValue = (value) => {\r\n    return typeof value !== \"string\" || value.trim().length < 1;\r\n};\r\n\r\nexport default function SpeedInputPage() {\r\n    const [formValue, setFormValue] = useState(initFormValue);\r\n    const [formError, setFormError] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false); // State variable for modal visibility\r\n\r\n    const validateForm = () => {\r\n        const error = {};\r\n        const lowerLimit = 0;\r\n        const upperLimit = 1000;\r\n\r\n        if (isEmptyValue(formValue.Speed)) {\r\n            error[\"Speed\"] = \"Speed is required\";\r\n        } else {\r\n            if (formValue.Speed < lowerLimit || formValue.Speed > upperLimit) {\r\n                error[\"Speed\"] = \"Vui lòng nhập giá trị từ 0 đến 1000\";\r\n            }\r\n        }\r\n\r\n        setFormError(error);\r\n\r\n        return Object.keys(error).length === 0;\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        setFormValue({\r\n            ...formValue,\r\n            Speed: value,\r\n            date: new Date().toISOString(),\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const currentDate = new Date();\r\n        const formattedDate = currentDate.toISOString();\r\n\r\n        if (validateForm()) {\r\n            try {\r\n                const userData = {\r\n                    speed: formValue.Speed,\r\n                    date: formattedDate,\r\n                };\r\n                const response = await axios.post(\r\n                    \"https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/POST_SPEED\",\r\n                    userData\r\n                );\r\n                const response1 = await axios.post(\r\n                    \"https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/test\",\r\n                    formValue\r\n                );\r\n                console.log(\"Đã gửi dữ liệu thành công:\", response.data);\r\n                console.log(\"Đã gửi dữ liệu thành công:\", response1.data);\r\n                fetchData();\r\n                toggleModal(); // Show the modal after successful submission\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi gửi dữ liệu:\", error);\r\n                // Xử lý lỗi và hiển thị thông báo lỗi cho người dùng\r\n            }\r\n        } else {\r\n            console.log(\"form invalid\");\r\n        }\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible); // Toggle the modal visibility state\r\n    };\r\n\r\n    console.log(formError);\r\n\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        fetch(\r\n            \"https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/GET_LIST_SPEED\"\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setData(data[0].public.input.jsondata);\r\n                setFilteredData(data[0].public.input.jsondata);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Fetch error:\", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='title'>\r\n                <i className='uil uil-tachometer-fast-alt'></i>\r\n                <span className='text'>Test Speed</span>\r\n            </div>\r\n            <div className=\"Speed-input1\">\r\n                <div className=\"Speed-iput-container1\">\r\n                    <h1 className=\"\">Tốc độ động cơ mong muốn</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <label htmlFor=\"Speed\" className=\"form-label1\">\r\n                                Nhập Tốc Độ Động Cơ\r\n                            </label>\r\n                            <input\r\n                                id=\"Speed\"\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                name=\"speed\"\r\n                                value={formValue.Speed}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {formError.Speed && (\r\n                                <div className=\"error-feedback\">{formError.Speed}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"center-align11\">\r\n                            <button type=\"submit\" className=\"button3\">\r\n                                Bắt Đầu\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            {modalVisible && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <i class=\"uil uil-check-circle modalicon\" style={{ width: \"200px\" }}></i>\r\n                        <h2>Thành Công</h2>\r\n                        <p>Tốc Độ Hiện Tại: {formValue.Speed}</p>\r\n                        <button className=\"modal-close\" onClick={toggleModal}>\r\n                            Đóng\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className='title'>\r\n                <i className='uil uil-tachometer-fast-alt'></i>\r\n                <span className='text'>Speed History</span>\r\n            </div>\r\n            <table style={{ marginTop: \"20px\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Last Speed</th>\r\n                        <th>Last Time </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.values(filteredData)\r\n                        .sort((a, b) => new Date(b.date) - new Date(a.date)) // Sort by date in descending order\r\n                        .slice(0, 10) // Get the top 10 accounts\r\n                        .map((item) => {\r\n                            const date = new Date(item.date);\r\n                            const formattedDate = `${date.getFullYear()}-${(\r\n                                date.getMonth() + 1\r\n                            )\r\n                                .toString()\r\n                                .padStart(2, \"0\")}-${date.getDate()\r\n                                    .toString()\r\n                                    .padStart(2, \"0\")} ${date.getHours()\r\n                                        .toString()\r\n                                        .padStart(2, \"0\")}:${date.getMinutes()\r\n                                            .toString()\r\n                                            .padStart(2, \"0\")}:${date.getSeconds()\r\n                                                .toString()\r\n                                                .padStart(2, \"0\")}`;\r\n\r\n                            return (\r\n                                <tr key={item.id}>\r\n                                    <td>Động Cơ Bước</td>\r\n                                    <td>{item.speed}</td>\r\n                                    <td>{formattedDate}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"names":["initFormValue","Speed","type","date","Date","default","now","isEmptyValue","value","trim","length","SpeedInputPage","formValue","setFormValue","useState","formError","setFormError","modalVisible","setModalVisible","toggleModal","console","log","data","setData","filteredData","setFilteredData","useEffect","fetchData","fetch","then","response","json","public","input","jsondata","catch","error","_jsxs","children","className","_jsx","onSubmit","async","event","preventDefault","formattedDate","toISOString","validateForm","Object","keys","userData","speed","axios","post","response1","htmlFor","id","name","onChange","target","class","style","width","onClick","marginTop","values","sort","a","b","slice","map","item","concat","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds"],"sourceRoot":""}