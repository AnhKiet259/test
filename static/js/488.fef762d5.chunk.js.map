{"version":3,"file":"static/js/488.fef762d5.chunk.js","mappings":"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","sources":["Components/RegisterAccount.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./RegisterAccount.css\";\r\nimport logore from './picgo.png';\r\nimport axios from 'axios';\r\n\r\nconst initFormValue = {\r\n    title: 'TÀI KHOẢN ĐĂNG KÝ',\r\n    type: 'object',\r\n    required: ['firstName', 'lastName', 'email', 'password', 'confirmPassword'],\r\n    properties: {\r\n        firstName: { type: 'string', title: 'TÊN NGƯỜI DÙNG' },\r\n        lastName: { type: 'string', title: 'HỌ NGƯỜI DÙNG' },\r\n        email: { type: 'string', title: 'Email NGƯỜI DÙNG ' },\r\n        password: { type: 'string', title: 'MÃ SỐ', format: 'password' },\r\n        confirmPassword: { type: 'string', title: 'MÃ SỐ', format: 'password' },\r\n        date: { type: Date, default: Date.now },\r\n    },\r\n};\r\n\r\nconst isEmptyValue = (value) => {\r\n    return !value || value.trim().length < 1;\r\n};\r\n\r\nconst isEmailValid = (email) => {\r\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\r\n};\r\n\r\nexport default function RegisterPage() {\r\n    const [formValue, setFormValue] = useState(initFormValue);\r\n    const [formError, setFormError] = useState({});\r\n\r\n    const validateForm = () => {\r\n        const error = {};\r\n\r\n        if (isEmptyValue(formValue.firstName)) {\r\n            error[\"firstName\"] = \"Error: First Name is required\";\r\n        }\r\n        if (isEmptyValue(formValue.lastName)) {\r\n            error[\"lastName\"] = \"Error: Last Name is required\";\r\n        }\r\n        if (isEmptyValue(formValue.email)) {\r\n            error[\"email\"] = \"Error: Email is required\";\r\n        } else {\r\n            if (!isEmailValid(formValue.email)) {\r\n                error[\"email\"] = \"Error: Email is invalid\";\r\n            }\r\n        }\r\n        if (isEmptyValue(formValue.password)) {\r\n            error[\"passWord\"] = \"Error: Password is required\";\r\n        }\r\n        if (isEmptyValue(formValue.confirmPassword)) {\r\n            error[\"confirmPassword\"] = \"Error: Confirm Password is required\";\r\n        } else if (formValue.confirmPassword !== formValue.password) {\r\n            error[\"confirmPassword\"] = \"Error: Confirm Password not match\";\r\n        }\r\n\r\n        setFormError(error);\r\n\r\n        return Object.keys(error).length === 0;\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value,\r\n            date: new Date().toISOString()\r\n        });\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/GET_ID_ACC');\r\n            const responseData = await response.json();\r\n            if (responseData[0] && responseData[0].ID_account !== null) {\r\n                return parseFloat(responseData[0].ID_account); // Convert the value to a double using parseFloat\r\n            }\r\n        } catch (error) {\r\n            console.error('Fetch error:', error);\r\n        }\r\n    };\r\n\r\n    const generateRandomNumber = async () => {\r\n        const data = await fetchData();\r\n        if (typeof data === 'undefined') {\r\n            return 1;\r\n        } else {\r\n            return data + 1;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const currentDate = new Date();\r\n        const formattedDate = currentDate.toISOString();\r\n        const randomNumberr = await generateRandomNumber();\r\n\r\n        if (validateForm()) {\r\n            try {\r\n                const randomNumber = {\r\n                    ID_account: randomNumberr,\r\n                };\r\n\r\n                const userData = {\r\n                    firstName: formValue.firstName,\r\n                    lastName: formValue.lastName,\r\n                    email: formValue.email,\r\n                    password: formValue.password,\r\n                    confirmPassword: formValue.confirmPassword,\r\n                    date: formattedDate,\r\n                    ID: randomNumberr,\r\n                };\r\n\r\n                console.error('Random number:', randomNumberr);\r\n                const response = await axios.post('https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/Log_in', userData);\r\n                const response1 = await axios.post('https://asia-south1.gcp.data.mongodb-api.com/app/application-0-iatxy/endpoint/COUNT_ID', randomNumber);\r\n\r\n                console.log('Đã gửi dữ liệu thành công:', response.data);\r\n                console.log('Đã gửi dữ liệu thành công:', response1.data);\r\n                // Xóa thông tin trong form sau khi gửi thành công\r\n                setFormValue({\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                });\r\n\r\n                // Thực hiện các xử lý tiếp theo, ví dụ: chuyển hướng, hiển thị thông báo thành công, vv.\r\n            } catch (error) {\r\n                console.error('Lỗi khi gửi dữ liệu:', error);\r\n                // Xử lý lỗi và hiển thị thông báo lỗi\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    console.log(formError);\r\n\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-pic js-tilt\" data-tilt>\r\n                    <img src={logore} alt='Logo' />\r\n                </div>\r\n\r\n                <form className=\"login100-form validate-form\" onSubmit={handleSubmit}>\r\n                    <span className=\"login100-form-title\">\r\n                        Register\r\n                    </span>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"first-name\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"FirstName\"\r\n                            value={formValue.firstName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.firstName && (\r\n                            <div className=\"error-feedback\">{formError.firstName}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-label\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"last-name\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"LastName\"\r\n                            value={formValue.lastName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.lastName && (\r\n                            <div className=\"error-feedback\">{formError.lastName}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-label\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"email\"\r\n                            className=\"input100\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={formValue.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.email && (\r\n                            <div className=\"error-feedback\">{formError.email}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-envelope\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"password\"\r\n                            className=\"input100\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={formValue.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.passWord && (\r\n                            <div className=\"error-feedback\">{formError.passWord}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-lock-alt\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"wrap-input100 validate-input\"\r\n                    >\r\n                        <input\r\n                            id=\"confirm-password\"\r\n                            className=\"input100\"\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Confirm Password\"\r\n                            value={formValue.confirmPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {formError.confirmPassword && (\r\n                            <div className=\"error-feedback\">{formError.confirmPassword}</div>\r\n                        )}\r\n                        <span className=\"focus-input100\"></span>\r\n                        <span className=\"symbol-input100\">\r\n                            <i class=\"uil uil-lock-alt\"></i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"container-login100-form-btn\">\r\n                        <button type=\"submit\" className=\"login100-form-btn\">Sign Up</button>\r\n                    </div>\r\n\r\n                    <div className=\"text-center p-t-136\" style={{ textAlign: \"center\", paddingTop: \"20px\" }}>\r\n                        <a className=\"txt2\" href=\"#\">\r\n                            Create your Account\r\n                            <i className=\"fa fa-long-arrow-right m-l-5\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["initFormValue","title","type","required","properties","firstName","lastName","email","password","format","confirmPassword","date","Date","default","now","isEmptyValue","value","trim","length","isEmailValid","test","RegisterPage","formValue","setFormValue","useState","formError","setFormError","handleChange","event","name","target","toISOString","generateRandomNumber","async","data","response","fetch","responseData","json","ID_account","parseFloat","error","console","fetchData","log","_jsx","className","children","_jsxs","src","logore","alt","onSubmit","preventDefault","formattedDate","randomNumberr","validateForm","Object","keys","randomNumber","userData","ID","axios","post","response1","id","placeholder","onChange","class","passWord","style","textAlign","paddingTop","href"],"sourceRoot":""}